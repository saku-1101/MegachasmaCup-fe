import { Header } from '@/components/molecules/Header/Header';
import './globals.css';
import { Inter } from 'next/font/google';
import { Suspense } from 'react';
import { GetAccountSettingsDocument } from '@/codegen/gql/graphql';
import user from '@/mockData/user.json';
import { getToken } from '@/lib/cookie';
import dummyUser from '@/mockData/user.json';
const inter = Inter({ subsets: ['latin'] });

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};
const getUser = async () => {
  try {
    const token = getToken();
    // isAuthenticated === true
    const res = await fetch(`http://localhost:3000/api/user?token=${token}`);
    const data = await res.json();
    console.log('user in layout:', data);
    const user = {
      id: data.id,
      name: data.name,
      email: data.email,
      imageUrl: data.imageUrl,
    };

    return user;
  } catch (error) {
    // isAuthenticated === false
    // *** dummy user
    const user = dummyUser;
    return user.data;
  }
};

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  // user Data fetch after the authentication
  // useEffectを使用する必要があるならheaderコンポーネントでuseEffectしてuserの変更を検知し，
  // dropdownにauth済みユーザを反映する
  const user = await getUser();

  return (
    <html lang='en' className='w-screen overflow-x-hidden'>
      <body className={inter.className}>
        <Suspense fallback='loading...'>
          <Header user={user} />
        </Suspense>
        {children}
      </body>
    </html>
  );
}
